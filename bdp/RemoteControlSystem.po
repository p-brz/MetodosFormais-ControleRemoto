THEORY ProofList IS
  _f(1) & _f(19) & _f(60) & loadProfile.3,(_f(64) & _f(47) => _f(65));
  _f(1) & _f(19) & _f(60) & loadProfile.2,(_f(61) & _f(44) => _f(63));
  _f(1) & _f(19) & _f(60) & loadProfile.1,(_f(61) & _f(40) => _f(62));
  _f(1) & _f(19) & _f(51) & saveCurrentProfile.4,(_f(58) & _f(59) => _f(18));
  _f(1) & _f(19) & _f(51) & saveCurrentProfile.3,(_f(56) => _f(57));
  _f(1) & _f(19) & _f(51) & saveCurrentProfile.2,(_f(54) => _f(55));
  _f(1) & _f(19) & _f(51) & saveCurrentProfile.1,(_f(52) => _f(53));
  _f(1) & _f(19) & _f(42) & recordKeyIdentifier.4,(_f(50) & _f(47) => _f(48));
  _f(1) & _f(19) & _f(42) & recordKeyIdentifier.3,(_f(49) & _f(44) => _f(45));
  _f(1) & _f(19) & _f(42) & recordKeyIdentifier.2,(_f(46) & _f(47) => _f(48));
  _f(1) & _f(19) & _f(42) & recordKeyIdentifier.1,(_f(43) & _f(44) => _f(45));
  _f(1) & _f(19) & _f(39) & recordSignal.1,(_f(40) => _f(41));
  _f(1) & _f(19) & _f(36) & pressSpecialKey.2,(_f(24) => _f(38));
  _f(1) & _f(19) & _f(36) & pressSpecialKey.1,(_f(22) => _f(37));
  _f(1) & _f(19) & decreaseTemperature.3,(_f(31) & _f(24) => _f(35));
  _f(1) & _f(19) & decreaseTemperature.2,(_f(31) & _f(22) => _f(34));
  _f(1) & _f(19) & decreaseTemperature.1,(_f(31) & _f(32) => _f(33));
  _f(1) & _f(19) & increaseTemperature.3,(_f(26) & _f(24) => _f(30));
  _f(1) & _f(19) & increaseTemperature.2,(_f(26) & _f(22) => _f(29));
  _f(1) & _f(19) & increaseTemperature.1,(_f(26) & _f(27) => _f(28));
  _f(1) & _f(19) & _f(20) & setTemperature.2,(_f(21) & _f(24) => _f(25));
  _f(1) & _f(19) & _f(20) & setTemperature.1,(_f(21) & _f(22) => _f(23));
  _f(1) & Initialisation.7,(_f(16) & _f(17) => _f(18));
  _f(1) & Initialisation.6,(_f(2) & _f(14) => _f(15));
  _f(1) & Initialisation.5,(_f(2) & _f(12) => _f(13));
  _f(1) & Initialisation.4,(_f(2) & _f(10) => _f(11));
  _f(1) & Initialisation.3,(_f(7) & _f(8) => _f(9));
  _f(1) & Initialisation.2,(_f(2) & _f(5) => _f(6));
  _f(1) & Initialisation.1,(_f(2) & _f(3) => _f(4))
END
&
THEORY Formulas IS
  ("`Component properties'" & TEMPERATURE: POW(INT) & 3<=card(TEMPERATURE) & maxTemperature = max(TEMPERATURE) & minTemperature = min(TEMPERATURE) & nullSignal: SIGNAL & CONTROL_KEYS: POW(KEY) & nullIdentifier: IDENTIFIER & KEYS_TO_SIGNALS = CONTROL_KEYS --> SIGNAL & KEYS_TO_IDENTIFIERS = CONTROL_KEYS --> IDENTIFIER & incKey: CONTROL_KEYS & decKey: CONTROL_KEYS & setKey: CONTROL_KEYS & SPECIAL_KEYS = CONTROL_KEYS-({incKey}\/{decKey}\/{setKey}) & not(incKey = decKey) & not(incKey = setKey) & not(decKey = setKey) & 3<=card(CONTROL_KEYS) & defaultProfile: PROFILE_IDENTIFIER & SIGNAL: FIN(INTEGER) & not(SIGNAL = {}) & KEY: FIN(INTEGER) & not(KEY = {}) & IDENTIFIER: FIN(INTEGER) & not(IDENTIFIER = {}) & PROFILE_IDENTIFIER: FIN(INTEGER) & not(PROFILE_IDENTIFIER = {}));
  ("`Local hypotheses'" & nameOut$0: IDENTIFIER & signalOut$0: SIGNAL & temp: TEMPERATURE & minTemperature<=temp & temp<=maxTemperature);
  "`Check that the invariant (keyMap: KEYS_TO_SIGNALS) is established by the initialisation - ref 3.3'";
  (CONTROL_KEYS*{nullSignal}: KEYS_TO_SIGNALS);
  "`Check that the invariant (keyName: KEYS_TO_IDENTIFIERS) is established by the initialisation - ref 3.3'";
  (CONTROL_KEYS*{nullIdentifier}: KEYS_TO_IDENTIFIERS);
  ("`Local hypotheses'" & nameOut$0: IDENTIFIER & signalOut$0: SIGNAL & temp: TEMPERATURE & minTemperature<=temp & temp<=maxTemperature & key1: CONTROL_KEYS & key2: CONTROL_KEYS & not(key1 = key2));
  "`Check that the invariant (!(key1,key2).(key1: CONTROL_KEYS & key2: CONTROL_KEYS & key1/=key2 => keyName(key1)/=keyName(key2) or keyName(key1) = nullIdentifier)) is established by the initialisation - ref 3.3'";
  (not((CONTROL_KEYS*{nullIdentifier})(key1) = (CONTROL_KEYS*{nullIdentifier})(key2)) or (CONTROL_KEYS*{nullIdentifier})(key1) = nullIdentifier);
  "`Check that the invariant (savedProfilesSignals: PROFILE_IDENTIFIER +-> KEYS_TO_SIGNALS) is established by the initialisation - ref 3.3'";
  ({defaultProfile|->CONTROL_KEYS*{nullSignal}}: PROFILE_IDENTIFIER +-> KEYS_TO_SIGNALS);
  "`Check that the invariant (savedProfilesNames: PROFILE_IDENTIFIER +-> KEYS_TO_IDENTIFIERS) is established by the initialisation - ref 3.3'";
  ({defaultProfile|->CONTROL_KEYS*{nullIdentifier}}: PROFILE_IDENTIFIER +-> KEYS_TO_IDENTIFIERS);
  "`Check that the invariant (dom(savedProfilesSignals) = dom(savedProfilesNames)) is established by the initialisation - ref 3.3'";
  (dom({defaultProfile|->CONTROL_KEYS*{nullSignal}}) = dom({defaultProfile|->CONTROL_KEYS*{nullIdentifier}}));
  ("`Local hypotheses'" & nameOut$0: IDENTIFIER & signalOut$0: SIGNAL & temp: TEMPERATURE & minTemperature<=temp & temp<=maxTemperature & keysToIds: KEYS_TO_IDENTIFIERS & keysToIds: ran({defaultProfile|->CONTROL_KEYS*{nullIdentifier}}) & key1$0: CONTROL_KEYS & key2$0: CONTROL_KEYS & not(key1$0 = key2$0));
  "`Check that the invariant (!keysToIds.(keysToIds: KEYS_TO_IDENTIFIERS & keysToIds: ran(savedProfilesNames) => !(key1,key2).(key1: CONTROL_KEYS & key2: CONTROL_KEYS & key1/=key2 => keysToIds(key1)/=keysToIds(key2) or keysToIds(key1) = nullIdentifier))) is established by the initialisation - ref 3.3'";
  (not(keysToIds(key1$0) = keysToIds(key2$0)) or keysToIds(key1$0) = nullIdentifier);
  ("`Component invariant'" & currentTemperature: TEMPERATURE & currentTemperature<=maxTemperature & minTemperature<=currentTemperature & signalOut: SIGNAL & nameOut: IDENTIFIER & keyMap: KEYS_TO_SIGNALS & keyName: KEYS_TO_IDENTIFIERS & !(key1,key2).(key1: CONTROL_KEYS & key2: CONTROL_KEYS & not(key1 = key2) => not(keyName(key1) = keyName(key2)) or keyName(key1) = nullIdentifier) & savedProfilesSignals: PROFILE_IDENTIFIER +-> KEYS_TO_SIGNALS & savedProfilesNames: PROFILE_IDENTIFIER +-> KEYS_TO_IDENTIFIERS & dom(savedProfilesSignals) = dom(savedProfilesNames) & currentProfileIdent: PROFILE_IDENTIFIER & !(keysToIds,key1$0,key2$0).(keysToIds: KEYS_TO_IDENTIFIERS & keysToIds: ran(savedProfilesNames) & (key1$0: CONTROL_KEYS & key2$0: CONTROL_KEYS & not(key1$0 = key2$0)) => not(keysToIds(key1$0) = keysToIds(key2$0)) or keysToIds(key1$0) = nullIdentifier));
  ("`setTemperature preconditions in this component'" & temp: TEMPERATURE);
  ("`Local hypotheses'" & temp<=maxTemperature & minTemperature<=temp);
  "`Check that the invariant (signalOut: SIGNAL) is preserved by the operation - ref 3.4'";
  (keyMap(setKey): SIGNAL);
  "`Check that the invariant (nameOut: IDENTIFIER) is preserved by the operation - ref 3.4'";
  (keyName(setKey): IDENTIFIER);
  ("`Local hypotheses'" & currentTemperature+1<=maxTemperature & currentTemperature+1: TEMPERATURE);
  "`Check that the invariant (currentTemperature>=minTemperature) is preserved by the operation - ref 3.4'";
  (minTemperature<=currentTemperature+1);
  (keyMap(incKey): SIGNAL);
  (keyName(incKey): IDENTIFIER);
  ("`Local hypotheses'" & minTemperature<=currentTemperature-1 & currentTemperature-1: TEMPERATURE);
  "`Check that the invariant (currentTemperature<=maxTemperature) is preserved by the operation - ref 3.4'";
  (currentTemperature-1<=maxTemperature);
  (keyMap(decKey): SIGNAL);
  (keyName(decKey): IDENTIFIER);
  ("`pressSpecialKey preconditions in this component'" & key: SPECIAL_KEYS);
  (keyMap(key): SIGNAL);
  (keyName(key): IDENTIFIER);
  ("`recordSignal preconditions in this component'" & signal: SIGNAL & key: CONTROL_KEYS);
  "`Check that the invariant (keyMap: KEYS_TO_SIGNALS) is preserved by the operation - ref 3.4'";
  (keyMap<+{key|->signal}: KEYS_TO_SIGNALS);
  ("`recordKeyIdentifier preconditions in this component'" & key: CONTROL_KEYS & ident: IDENTIFIER);
  ("`Local hypotheses'" & not(ident: ran(keyName)));
  "`Check that the invariant (keyName: KEYS_TO_IDENTIFIERS) is preserved by the operation - ref 3.4'";
  (keyName<+{key|->ident}: KEYS_TO_IDENTIFIERS);
  ("`Local hypotheses'" & not(ident: ran(keyName)) & key1: CONTROL_KEYS & key2: CONTROL_KEYS & not(key1 = key2));
  "`Check that the invariant (!(key1,key2).(key1: CONTROL_KEYS & key2: CONTROL_KEYS & key1/=key2 => keyName(key1)/=keyName(key2) or keyName(key1) = nullIdentifier)) is preserved by the operation - ref 3.4'";
  (not((keyName<+{key|->ident})(key1) = (keyName<+{key|->ident})(key2)) or (keyName<+{key|->ident})(key1) = nullIdentifier);
  ("`Local hypotheses'" & ident = nullIdentifier);
  ("`Local hypotheses'" & ident = nullIdentifier & key1: CONTROL_KEYS & key2: CONTROL_KEYS & not(key1 = key2));
  ("`saveCurrentProfile preconditions in this component'" & ident: PROFILE_IDENTIFIER);
  "`Check that the invariant (savedProfilesSignals: PROFILE_IDENTIFIER +-> KEYS_TO_SIGNALS) is preserved by the operation - ref 3.4'";
  (savedProfilesSignals<+{ident|->keyMap}: PROFILE_IDENTIFIER +-> KEYS_TO_SIGNALS);
  "`Check that the invariant (savedProfilesNames: PROFILE_IDENTIFIER +-> KEYS_TO_IDENTIFIERS) is preserved by the operation - ref 3.4'";
  (savedProfilesNames<+{ident|->keyName}: PROFILE_IDENTIFIER +-> KEYS_TO_IDENTIFIERS);
  "`Check that the invariant (dom(savedProfilesSignals) = dom(savedProfilesNames)) is preserved by the operation - ref 3.4'";
  (dom(savedProfilesSignals<+{ident|->keyMap}) = dom(savedProfilesNames<+{ident|->keyName}));
  ("`Local hypotheses'" & keysToIds: KEYS_TO_IDENTIFIERS & keysToIds: ran(savedProfilesNames<+{ident|->keyName}) & key1$0: CONTROL_KEYS & key2$0: CONTROL_KEYS & not(key1$0 = key2$0));
  "`Check that the invariant (!keysToIds.(keysToIds: KEYS_TO_IDENTIFIERS & keysToIds: ran(savedProfilesNames) => !(key1,key2).(key1: CONTROL_KEYS & key2: CONTROL_KEYS & key1/=key2 => keysToIds(key1)/=keysToIds(key2) or keysToIds(key1) = nullIdentifier))) is preserved by the operation - ref 3.4'";
  ("`loadProfile preconditions in this component'" & profileIdent: PROFILE_IDENTIFIER);
  ("`Local hypotheses'" & profileIdent: dom(savedProfilesSignals));
  (savedProfilesSignals(profileIdent): KEYS_TO_SIGNALS);
  (savedProfilesNames(profileIdent): KEYS_TO_IDENTIFIERS);
  ("`Local hypotheses'" & profileIdent: dom(savedProfilesSignals) & key1: CONTROL_KEYS & key2: CONTROL_KEYS & not(key1 = key2));
  (not(savedProfilesNames(profileIdent)(key1) = savedProfilesNames(profileIdent)(key2)) or savedProfilesNames(profileIdent)(key1) = nullIdentifier)
END
&
THEORY EnumerateX 
END
&
THEORY Version IS
  POVersion("V4.0-29507")(CLT == "V4.0-31779")(genOPO == KO, genDivergencePO == KO, local_op == OK)
END
